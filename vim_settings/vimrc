" Set cursor to last position you were at when you opened the file
set viminfo='10,\"100,:20,%,n~/.viminfo
au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

" Set tabstop and shiftwidth together
set tabstop=4
set shiftwidth=4

" Expand tabs to spaces
set expandtab

" Use the modeline if provided
set modeline

" Always show information about where the cursor is
set ruler

" Use a 256-color terminal for better diff colors
set t_Co=256
"hi DiffText cterm=underline

" Backspace over everything
set backspace=indent,eol,start

if has("win32")
	" For Windows GVIM
	set guifont=Lucida_Console:h9:cANSI
else
	" For Linux GVIM
	set guifont=Monospace\ 10
	" Hide menu
	set guioptions-=m
	" Hide toolbar
	set guioptions-=T
end

" Autoindent
set autoindent

" Enable filetype detection, enable available plugins and indent files
filetype plugin indent on

" Enable syntax highlighting
syntax on

" Choose a colorscheme
colorscheme inkpot

" Search parameters: incremental, highlight, <CR> in normal will clear
set incsearch
set hlsearch
nnoremap <CR> :noh<CR><CR>

" Match braces
set showmatch

" Allow cursor to move anywhere in visual block mode
set virtualedit=block

" Don't tab-complete *.o and *.d
set wildignore+=*.o
set wildignore+=*.d

" Insert mode abbreviations
iab cssr std::string const &
iab inow <C-R>=strftime("%Y%m%dT%H%M")<CR>
iab dnow <C-R>=strftime("%Y-%m-%d")<CR>

" Keyboard shortcuts!
" Next error
nnoremap <F4> :cn<CR>

" Code review helpers (assumes you are working from a list of changed files)
" Diff file under cursor with $BRANCHED_ON_REV version and keep the original
" list 3 lines high at the bottom of the screen.
nnoremap <F10> <C-W><C-F><C-W>_3<C-W>-:VCSVimDiff $BRANCHED_ON_REV<CR><C-W><C-X>
" Go back to the list of changed files (the first buffer) and close all other
" windows
nnoremap <F11> :bf<CR>:only<CR>
" Move the current line to the bottom of the file, returning to the top
nnoremap <F12> :move $<cr>:normal '.w<CR>

" Spacebar is page-down, backspace is page-up
nnoremap <space> <c-f>
nnoremap <bs>    <c-b>

" Embiggen the screen
nnoremap <Leader>+ :set lines=50<CR>:set columns=160<CR>
nnoremap <Leader>- :set lines&<CR>:set columns&<CR>

" jk in insert mode is short-cut to Escape
inoremap jk <Esc>

" Autocommands
autocmd BufNewFile *.h call MakeIncGuard()

" Make newer file appear on right in VCSVimDiff
augroup VCSCommand
	autocmd User VCSVimDiffFinish wincmd x
augroup END

"
" Functions
" 

" Add header guards to .h file
function! MakeIncGuard()
	let l:basename = substitute(bufname(""), '.*/', '', '')
	let l:guard = '_' . substitute(toupper(l:basename), '\.', '_', "g")
	call append(0, "#ifndef " . l:guard)
	call append(1, "#define " . l:guard)
	call append(line("$"), "#endif // #ifndef " . l:guard)
endfunction

